/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;
import acessdata.DataMan;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.SQLException;

/**
 *
 * @author prakxo
 */
public class MainEd extends javax.swing.JFrame {

    private ActorEd actor;
    private CatEd category;
    
    private int actorWindowClosed = 1;
    private int categoryWindowClosed = 1;
    
    /**
     * Creates new form mainEd
     */
    public MainEd() throws SQLException {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ActorButton = new javax.swing.JButton();
        categoryButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Access");
        setResizable(false);

        ActorButton.setText("Actor");
        ActorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openWindowActor(evt);
            }
        });

        categoryButton.setText("Category");
        categoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openWindowCategory(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(ActorButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(categoryButton)
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ActorButton)
                    .addComponent(categoryButton))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openWindowActor(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openWindowActor
        if(actor == null){
            actor = new ActorEd();
        }
        MainEd main = this;
        
        actor.addWindowListener(new WindowListener() {
            @Override
            public void windowClosing(WindowEvent ev) {
                main.setEnabled(true);
                main.actorWindowClosed = 1;

            }
            @Override
            public void windowOpened(WindowEvent ev) {
                main.setEnabled(false);
                main.actorWindowClosed = 0;
            }        

            @Override
            public void windowClosed(WindowEvent ev) {

            }

            @Override
            public void windowIconified(WindowEvent ev) {

            }

            @Override
            public void windowDeiconified(WindowEvent ev) {

            }

            @Override
            public void windowActivated(WindowEvent ev) {

            }

            @Override
            public void windowDeactivated(WindowEvent ev) {

            }
            
        });
        
        actor.setVisible(true);
    }//GEN-LAST:event_openWindowActor

    private void openWindowCategory(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openWindowCategory
        if(category == null){
            category = new CatEd();
        }
        
        MainEd main = this;
        
        category.addWindowListener(new WindowListener() {
            @Override
            public void windowClosing(WindowEvent ev) {
                main.setEnabled(true);
            }
            @Override
            public void windowOpened(WindowEvent ev) {
                main.setEnabled(false);
            }        

            @Override
            public void windowClosed(WindowEvent ev) {

            }

            @Override
            public void windowIconified(WindowEvent ev) {

            }

            @Override
            public void windowDeiconified(WindowEvent ev) {

            }

            @Override
            public void windowActivated(WindowEvent ev) {

            }

            @Override
            public void windowDeactivated(WindowEvent ev) {

            }
            
        });
        
        category.setVisible(true);   
    }//GEN-LAST:event_openWindowCategory


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActorButton;
    private javax.swing.JButton categoryButton;
    // End of variables declaration//GEN-END:variables
}
